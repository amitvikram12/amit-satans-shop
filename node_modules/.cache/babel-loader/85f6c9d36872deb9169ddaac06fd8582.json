{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_ERROR, FETCH_USERDATA_REQUEST, FETCH_USERDATA_SUCCESS, FETCH_USERDATA_ERROR } from \"./loginTypes\";\nexport const fetchLoginRequest = () => {\n  return {\n    type: FETCH_LOGIN_REQUEST\n  };\n};\nexport const fetchLoginSuccess = payload => {\n  console.log(payload);\n  return {\n    type: FETCH_LOGIN_SUCCESS,\n    payload: payload\n  };\n};\nexport const fetchLoginError = payload => {\n  return {\n    type: FETCH_LOGIN_ERROR,\n    payload: payload\n  };\n};\n\nconst fetchUserDataRequest = () => {\n  return {\n    type: FETCH_USERDATA_REQUEST\n  };\n};\n\nconst fetchUserDataSuccess = payload => {\n  return {\n    type: FETCH_USERDATA_SUCCESS,\n    payload: payload\n  };\n};\n\nconst fetchUserDataError = payload => {\n  return {\n    type: FETCH_USERDATA_ERROR,\n    payload: payload\n  };\n};\n\nexport const fetchLogin = (email, password) => {\n  return dispatch => {\n    dispatch(fetchLoginRequest());\n    axios.post(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/login`, {\n      email: email,\n      password: password\n    }).then(response => {\n      localStorage.setItem(\"token\", response.data.token);\n      dispatch(fetchLoginSuccess(response.data.token));\n    }).catch(error => dispatch(fetchLoginError(error.message)));\n  };\n};\nexport const fetchUserData = authToken => {\n  return dispatch => {\n    dispatch(fetchUserDataRequest());\n    axios.get(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/getuserdetails`);\n  };\n};","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/reduxstore/login/loginAction.js"],"names":["axios","FETCH_LOGIN_REQUEST","FETCH_LOGIN_SUCCESS","FETCH_LOGIN_ERROR","FETCH_USERDATA_REQUEST","FETCH_USERDATA_SUCCESS","FETCH_USERDATA_ERROR","fetchLoginRequest","type","fetchLoginSuccess","payload","console","log","fetchLoginError","fetchUserDataRequest","fetchUserDataSuccess","fetchUserDataError","fetchLogin","email","password","dispatch","post","process","env","REACT_APP_CAKE_WEBSITE_API_URL","then","response","localStorage","setItem","data","token","catch","error","message","fetchUserData","authToken","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,iBAAnD,EAAsEC,sBAAtE,EAA8FC,sBAA9F,EAAsHC,oBAAtH,QAAkJ,cAAlJ;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHC,IAAAA,IAAI,EAACP;AADF,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,iBAAiB,GAAGC,OAAO,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO;AACHF,IAAAA,IAAI,EAACN,mBADF;AAEHQ,IAAAA,OAAO,EAACA;AAFL,GAAP;AAIH,CANM;AAQP,OAAO,MAAMG,eAAe,GAAGH,OAAO,IAAI;AACtC,SAAO;AACHF,IAAAA,IAAI,EAACL,iBADF;AAEHO,IAAAA,OAAO,EAACA;AAFL,GAAP;AAIH,CALM;;AAOP,MAAMI,oBAAoB,GAAG,MAAM;AAC/B,SAAO;AACHN,IAAAA,IAAI,EAACJ;AADF,GAAP;AAGH,CAJD;;AAMA,MAAMW,oBAAoB,GAAGL,OAAO,IAAI;AACpC,SAAO;AACHF,IAAAA,IAAI,EAACH,sBADF;AAEHK,IAAAA,OAAO,EAACA;AAFL,GAAP;AAIH,CALD;;AAOA,MAAMM,kBAAkB,GAAGN,OAAO,IAAI;AAClC,SAAO;AACHF,IAAAA,IAAI,EAACF,oBADF;AAEHI,IAAAA,OAAO,EAACA;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMO,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;AACAP,IAAAA,KAAK,CAACqB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,QAAzD,EAAiE;AAACN,MAAAA,KAAK,EAACA,KAAP;AAAcC,MAAAA,QAAQ,EAACA;AAAvB,KAAjE,EAAmGM,IAAnG,CAAyGC,QAAD,IAAc;AAClHC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,QAAQ,CAACG,IAAT,CAAcC,KAA3C;AACAV,MAAAA,QAAQ,CAACX,iBAAiB,CAACiB,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAlB,CAAR;AACH,KAHD,EAGGC,KAHH,CAGUC,KAAD,IAAWZ,QAAQ,CAACP,eAAe,CAACmB,KAAK,CAACC,OAAP,CAAhB,CAH5B;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,aAAa,GAAIC,SAAD,IAAe;AACxC,SAAOf,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACAd,IAAAA,KAAK,CAACoC,GAAN,CAAW,GAAEd,OAAO,CAACC,GAAR,CAAYC,8BAA+B,iBAAxD;AACH,GAHD;AAIH,CALM","sourcesContent":["import axios from \"axios\";\nimport { FETCH_LOGIN_REQUEST, FETCH_LOGIN_SUCCESS, FETCH_LOGIN_ERROR, FETCH_USERDATA_REQUEST, FETCH_USERDATA_SUCCESS, FETCH_USERDATA_ERROR } from \"./loginTypes\";\n\nexport const fetchLoginRequest = () => {\n    return {\n        type:FETCH_LOGIN_REQUEST,\n    }\n};\n\nexport const fetchLoginSuccess = payload => {\n    console.log(payload)\n    return {\n        type:FETCH_LOGIN_SUCCESS,\n        payload:payload\n    }\n}\n\nexport const fetchLoginError = payload => {\n    return {\n        type:FETCH_LOGIN_ERROR, \n        payload:payload\n    }\n}\n\nconst fetchUserDataRequest = () => {\n    return {\n        type:FETCH_USERDATA_REQUEST\n    }\n}\n\nconst fetchUserDataSuccess = payload => {\n    return {\n        type:FETCH_USERDATA_SUCCESS,\n        payload:payload,\n    }\n}\n\nconst fetchUserDataError = payload => {\n    return {\n        type:FETCH_USERDATA_ERROR,\n        payload:payload\n    }\n}\n\nexport const fetchLogin = (email, password) => {\n    return (dispatch) => {\n        dispatch(fetchLoginRequest())\n        axios.post(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/login`,{email:email, password:password}).then((response) => {\n            localStorage.setItem(\"token\",response.data.token)\n            dispatch(fetchLoginSuccess(response.data.token))\n        }).catch((error) => dispatch(fetchLoginError(error.message)));\n    }\n} \n\nexport const fetchUserData = (authToken) => {\n    return dispatch => {\n        dispatch(fetchUserDataRequest())\n        axios.get(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/getuserdetails`)\n    }\n}"]},"metadata":{},"sourceType":"module"}