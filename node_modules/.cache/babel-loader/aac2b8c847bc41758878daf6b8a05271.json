{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  let textData = \"\";\n  let typedPassword = \"\";\n  const [emailError, setEmailError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const login = event => {\n    setLoading(true);\n    let validationError = false;\n    event.preventDefault();\n\n    if (textData === \"\") {\n      setEmailError(\"Email is required\");\n      validationError = true;\n    } else if (!validateEmail(textData)) {\n      setEmailError(\"Invalid email\");\n      validationError = true;\n    }\n\n    if (!validationError) {\n      axios({\n        method: \"POST\",\n        url: `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/login`,\n        data: {\n          email: textData,\n          password: typedPassword\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.token) {\n          localStorage.setItem('token', response.data.token);\n          props.dispatch({\n            type: \"LOGIN\"\n          });\n        } else {\n          setError(\"Invalid credentials\");\n        }\n\n        setLoading(false);\n      }, error => {\n        console.log(error);\n      }); // this.props.history.push(\"/\");\n    }\n  };\n\n  const getTypedEmail = event => {\n    textData = event.target.value;\n  };\n\n  const getTypedPassword = event => {\n    typedPassword = event.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getTypedEmail,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type your email here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\"\n          },\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getTypedPassword,\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Type your password here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          className: \"btn btn-danger\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"btn btn-danger\",\n              href: \"#\",\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"S9KLS54RG82u67AGYJckmC4XgIQ=\");\n\n_c = Login;\nexport default connect()(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Login.js"],"names":["Link","useState","axios","CircleLoader","connect","Login","props","textData","typedPassword","emailError","setEmailError","error","setError","loading","setLoading","loaderStyle","position","left","top","zIndex","validateEmail","email","re","test","login","event","validationError","preventDefault","method","url","process","env","REACT_APP_CAKE_WEBSITE_API_URL","data","password","then","response","console","log","token","localStorage","setItem","dispatch","type","getTypedEmail","target","value","getTypedPassword","color","fontSize"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,MAAIC,QAAQ,GAAE,EAAd;AACA,MAAIC,aAAa,GAAE,EAAnB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAK,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,IAAI,EAAC,KAFW;AAGhBC,IAAAA,GAAG,EAAC,KAHY;AAIhBC,IAAAA,MAAM,EAAC;AAJS,GAApB;;AAMA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,UAAMC,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACH,GAHD;;AAIA,QAAMG,KAAK,GAAIC,KAAD,IAAW;AACrBX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIY,eAAe,GAAG,KAAtB;AACAD,IAAAA,KAAK,CAACE,cAAN;;AACA,QAAIpB,QAAQ,KAAK,EAAjB,EAAqB;AACjBG,MAAAA,aAAa,CAAC,mBAAD,CAAb;AACAgB,MAAAA,eAAe,GAAG,IAAlB;AACH,KAHD,MAIK,IAAI,CAACN,aAAa,CAACb,QAAD,CAAlB,EAA8B;AAC/BG,MAAAA,aAAa,CAAC,eAAD,CAAb;AACAgB,MAAAA,eAAe,GAAG,IAAlB;AACH;;AACD,QAAI,CAACA,eAAL,EAAsB;AAClBxB,MAAAA,KAAK,CAAC;AACF0B,QAAAA,MAAM,EAAC,MADL;AAEFC,QAAAA,GAAG,EAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,QAFhD;AAGFC,QAAAA,IAAI,EAAC;AAACZ,UAAAA,KAAK,EAACd,QAAP;AAAiB2B,UAAAA,QAAQ,EAAC1B;AAA1B;AAHH,OAAD,CAAL,CAIG2B,IAJH,CAISC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAQ,CAACH,IAAT,CAAcM,KAAlB,EAAyB;AACrBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,QAAQ,CAACH,IAAT,CAAcM,KAA3C;AACAjC,UAAAA,KAAK,CAACoC,QAAN,CAAe;AACXC,YAAAA,IAAI,EAAC;AADM,WAAf;AAGH,SALD,MAMK;AACD/B,UAAAA,QAAQ,CAAC,qBAAD,CAAR;AACH;;AACDE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAhBD,EAgBIH,KAAD,IAAW;AACV0B,QAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACH,OAlBD,EADkB,CAsBlB;AACH;AACJ,GApCD;;AAsCA,QAAMiC,aAAa,GAAInB,KAAD,IAAW;AAC7BlB,IAAAA,QAAQ,GAAGkB,KAAK,CAACoB,MAAN,CAAaC,KAAxB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAItB,KAAD,IAAW;AAChCjB,IAAAA,aAAa,GAAGiB,KAAK,CAACoB,MAAN,CAAaC,KAA7B;AACH,GAFD;;AAMA,sBACI;AAAA,eACKjC,OAAO,gBAAG;AAAK,MAAA,KAAK,EAAEE,WAAZ;AAAA,6BAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAkD;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BACtD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,QAAQ,EAAE6B,aAAjB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA2C,UAAA,SAAS,EAAC,cAArD;AAAoE,UAAA,WAAW,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAE;AAACI,YAAAA,KAAK,EAAC,KAAP;AAAaC,YAAAA,QAAQ,EAAC;AAAtB,WAAZ;AAAA,oBAA4CxC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADsD,eAKtD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAEsC,gBAAjB;AAAmC,UAAA,IAAI,EAAC,UAAxC;AAAkD,UAAA,SAAS,EAAC,cAA5D;AAA2E,UAAA,WAAW,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALsD,eAQtD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACA;AAAQ,UAAA,OAAO,EAAEvB,KAAjB;AAAwB,UAAA,SAAS,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cARsD,eAWtD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA,mCACI;AAAG,cAAA,SAAS,EAAC,gBAAb;AAA8B,cAAA,IAAI,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXsD;AAAA;AAAA;AAAA;AAAA;AAAA,YAD9D,eAoBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKb;AADL;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA7FQN,K;;KAAAA,K;AA+FT,eAAeD,OAAO,GAAGC,KAAH,CAAtB","sourcesContent":["import { Link } from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\n\nfunction Login(props){\n    let textData =\"\";\n    let typedPassword =\"\";\n    const [emailError, setEmailError] = useState(\"\")\n    const[error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    const validateEmail = (email) => {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n    const login = (event) => {\n        setLoading(true);\n        let validationError = false;\n        event.preventDefault();\n        if (textData === \"\") {\n            setEmailError(\"Email is required\");\n            validationError = true;\n        }\n        else if (!validateEmail(textData)) {\n            setEmailError(\"Invalid email\");\n            validationError = true;\n        }\n        if (!validationError) {\n            axios({\n                method:\"POST\",\n                url:`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/login`,\n                data:{email:textData, password:typedPassword}\n            }).then((response) => {\n                console.log(response);\n                if (response.data.token) {\n                    localStorage.setItem('token',response.data.token)\n                    props.dispatch({\n                        type:\"LOGIN\"\n                    })\n                }\n                else {\n                    setError(\"Invalid credentials\")\n                }\n                setLoading(false);\n            }, (error) => {\n                console.log(error);\n            })\n            \n            \n            // this.props.history.push(\"/\");\n        }\n    }\n\n    const getTypedEmail = (event) => {\n        textData = event.target.value;\n    }\n\n    const getTypedPassword = (event) => {\n        typedPassword = event.target.value;\n    }\n\n\n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div>:<div class=\"container mt-5\">\n                <div className=\"form-group\">\n                    <input onChange={getTypedEmail} type=\"text\"className=\"form-control\" placeholder=\"Type your email here...\"/>\n                    <div style={{color:\"red\",fontSize:\"15px\"}}>{emailError}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input onChange={getTypedPassword} type=\"password\"className=\"form-control\" placeholder=\"Type your password here...\"/>\n                </div>\n                <div className=\"form-group\">\n                <button onClick={login} className=\"btn btn-danger\">Login</button>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <Link to=\"/forgot\">\n                            <a className=\"btn btn-danger\" href=\"#\">Forgot password</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>}\n            <div className=\"alert\">\n                {error}\n            </div>\n        </div>\n            \n            \n        \n    )\n}\n\nexport default connect()(Login);"]},"metadata":{},"sourceType":"module"}