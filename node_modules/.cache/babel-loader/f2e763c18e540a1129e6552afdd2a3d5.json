{"ast":null,"code":"import Cake from\"./Cake\";import{useEffect}from'react';import{CircleLoader}from\"react-spinners\";import{connect}from\"react-redux\";import{fetchAllCakes as _fetchAllCakes}from\"../reduxstore/cakes/cakeActions\";import{jsx as _jsx}from\"react/jsx-runtime\";var CakeList=function CakeList(_ref){var loading=_ref.loading,cakes=_ref.cakes,error=_ref.error,fetchAllCakes=_ref.fetchAllCakes;var loaderStyle={position:\"absolute\",left:\"50%\",top:\"50%\",zIndex:\"999\"};useEffect(function(){fetchAllCakes();},[]);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(\"div\",{style:loaderStyle,children:/*#__PURE__*/_jsx(CircleLoader,{})}):/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"33% 33% 33%\",gridColumnGap:\"10px\",gridRowGap:\"20px\"},children:cakes.map(function(cake,index){return/*#__PURE__*/_jsx(Cake,{cake:cake},index);})})});};var mapStateToProps=function mapStateToProps(state){return{loading:state.cake.loading,cakes:state.cake.cakes,error:state.cake.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchAllCakes:function fetchAllCakes(){return dispatch(_fetchAllCakes());}};};export default connect(mapStateToProps,mapDispatchToProps)(CakeList);","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/components/CakeLIst.js"],"names":["Cake","useEffect","CircleLoader","connect","fetchAllCakes","CakeList","loading","cakes","error","loaderStyle","position","left","top","zIndex","display","gridTemplateColumns","gridColumnGap","gridRowGap","map","cake","index","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,aAAa,GAAbA,CAAAA,cAAT,KAA8B,iCAA9B,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA4C,IAA1CC,CAAAA,OAA0C,MAA1CA,OAA0C,CAAjCC,KAAiC,MAAjCA,KAAiC,CAA1BC,KAA0B,MAA1BA,KAA0B,CAAnBJ,aAAmB,MAAnBA,aAAmB,CAEzD,GAAMK,CAAAA,WAAW,CAAG,CAChBC,QAAQ,CAAC,UADO,CAEhBC,IAAI,CAAC,KAFW,CAGhBC,GAAG,CAAC,KAHY,CAIhBC,MAAM,CAAC,KAJS,CAApB,CAMAZ,SAAS,CAAC,UAAM,CACZG,aAAa,GAChB,CAFQ,CAEP,EAFO,CAAT,CAIA,mBACI,qBACKE,OAAO,cAAG,YAAK,KAAK,CAAEG,WAAZ,uBAAyB,KAAC,YAAD,IAAzB,EAAH,cAAoD,YAAK,KAAK,CAAE,CAACK,OAAO,CAAC,MAAT,CAAiBC,mBAAmB,CAAC,aAArC,CAAmDC,aAAa,CAAC,MAAjE,CAAwEC,UAAU,CAAC,MAAnF,CAAZ,UACnDV,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACxB,mBACK,KAAC,IAAD,EAAM,IAAI,CAAED,IAAZ,EAAuBC,KAAvB,CADL,CAGH,CAJA,CADmD,EADhE,EADJ,CAaH,CAzBD,CA2BA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHhB,OAAO,CAACgB,KAAK,CAACH,IAAN,CAAWb,OADhB,CAEHC,KAAK,CAACe,KAAK,CAACH,IAAN,CAAWZ,KAFd,CAGHC,KAAK,CAACc,KAAK,CAACH,IAAN,CAAWX,KAHd,CAAP,CAKH,CAND,CAQA,GAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHpB,aAAa,CAAC,+BAAMoB,CAAAA,QAAQ,CAACpB,cAAa,EAAd,CAAd,EADX,CAAP,CAGH,CAJD,CAKA,cAAeD,CAAAA,OAAO,CAACkB,eAAD,CAAiBE,kBAAjB,CAAP,CAA4ClB,QAA5C,CAAf","sourcesContent":["import Cake from \"./Cake\";\nimport {useEffect} from 'react';\nimport { CircleLoader } from \"react-spinners\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCakes } from \"../reduxstore/cakes/cakeActions\";\n\nconst CakeList = ({loading, cakes, error, fetchAllCakes}) => {\n\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    useEffect(() => {\n        fetchAllCakes();\n    },[])\n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div> : <div style={{display:\"grid\", gridTemplateColumns:\"33% 33% 33%\",gridColumnGap:\"10px\",gridRowGap:\"20px\"}}>\n                    {cakes.map((cake, index) => {\n                        return (\n                             <Cake cake={cake} key={index}/>\n                        )\n                    })}\n                </div>}\n        </div>\n        \n        \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading:state.cake.loading,\n        cakes:state.cake.cakes,\n        error:state.cake.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllCakes:() => dispatch(fetchAllCakes())\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CakeList);"]},"metadata":{},"sourceType":"module"}