{"ast":null,"code":"import _slicedToArray from\"/home/neosoft/react-project/react-first/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import queryString from'query-string';import{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import Cake from'./Cake';import{CircleLoader}from'react-spinners';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(props){console.log(props);var location=useLocation();var loaderStyle={position:\"absolute\",left:\"50%\",top:\"50%\",zIndex:\"999\"};console.log(location);var query=queryString.parse(location.search);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cakes=_useState2[0],setCakes=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];useEffect(function(){axios({method:\"GET\",url:\"\".concat(process.env.REACT_APP_CAKE_WEBSITE_API_URL,\"/searchcakes?q=\").concat(query.q)}).then(function(response){console.log(response.data);setCakes(response.data.data);setIsLoading(false);console.log(cakes);},function(error){setError(error);});},[query.q]);return/*#__PURE__*/_jsx(\"div\",{children:isLoading?/*#__PURE__*/_jsx(\"div\",{class:loaderStyle,children:/*#__PURE__*/_jsx(CircleLoader,{})}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\"},children:cakes.map(function(each,index){return/*#__PURE__*/_jsx(Cake,{cake:each},index);})}),cakes.length==0&&/*#__PURE__*/_jsx(\"div\",{className:\"alert\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sorry no results found for search \",query.q]})})]})});};export default Search;","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Search.js"],"names":["axios","queryString","useEffect","useState","useLocation","Cake","CircleLoader","Search","props","console","log","location","loaderStyle","position","left","top","zIndex","query","parse","search","cakes","setCakes","error","setError","isLoading","setIsLoading","method","url","process","env","REACT_APP_CAKE_WEBSITE_API_URL","q","then","response","data","display","map","each","index","length"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,YAAT,KAA6B,gBAA7B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAMG,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,WAAW,CAAG,CAChBC,QAAQ,CAAC,UADO,CAEhBC,IAAI,CAAC,KAFW,CAGhBC,GAAG,CAAC,KAHY,CAIhBC,MAAM,CAAC,KAJS,CAApB,CAMAP,OAAO,CAACC,GAAR,CAAYC,QAAZ,EACA,GAAIM,CAAAA,KAAK,CAAGhB,WAAW,CAACiB,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CAAZ,CACA,cAA0BhB,QAAQ,CAAC,EAAD,CAAlC,wCAAOiB,KAAP,eAAcC,QAAd,eACA,eAA0BlB,QAAQ,CAAC,EAAD,CAAlC,yCAAOmB,KAAP,eAAcC,QAAd,eACA,eAAiCpB,QAAQ,CAAC,IAAD,CAAzC,yCAAOqB,SAAP,eAAkBC,YAAlB,eACAvB,SAAS,CAAC,UAAM,CACZF,KAAK,CAAC,CACF0B,MAAM,CAAC,KADL,CAEFC,GAAG,WAAIC,OAAO,CAACC,GAAR,CAAYC,8BAAhB,2BAAgEb,KAAK,CAACc,CAAtE,CAFD,CAAD,CAAL,CAGGC,IAHH,CAGQ,SAACC,QAAD,CAAc,CAClBxB,OAAO,CAACC,GAAR,CAAYuB,QAAQ,CAACC,IAArB,EACAb,QAAQ,CAACY,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAR,CACAT,YAAY,CAAC,KAAD,CAAZ,CACAhB,OAAO,CAACC,GAAR,CAAYU,KAAZ,EACH,CARD,CAQG,SAACE,KAAD,CAAW,CACVC,QAAQ,CAACD,KAAD,CAAR,CACH,CAVD,EAWH,CAZQ,CAYP,CAACL,KAAK,CAACc,CAAP,CAZO,CAAT,CAaA,mBACI,qBACAP,SAAS,cAAG,YAAK,KAAK,CAAEZ,WAAZ,uBAAyB,KAAC,YAAD,IAAzB,EAAH,cAAoD,oCACzD,YAAK,KAAK,CAAE,CAACuB,OAAO,CAAC,MAAT,CAAZ,UACKf,KAAK,CAACgB,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACxB,mBAAO,KAAC,IAAD,EAAkB,IAAI,CAAED,IAAxB,EAAWC,KAAX,CAAP,CACH,CAFA,CADL,EADyD,CAMxDlB,KAAK,CAACmB,MAAN,EAAgB,CAAhB,eAAqB,YAAK,SAAS,CAAC,OAAf,uBAClB,2DAAuCtB,KAAK,CAACc,CAA7C,GADkB,EANmC,GAD7D,EADJ,CAeH,CA1CD,CA4CA,cAAexB,CAAAA,MAAf","sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Cake from './Cake';\nimport { CircleLoader } from 'react-spinners';\n\nconst Search = (props) => {\n    console.log(props)\n    const location = useLocation();\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    console.log(location);\n    let query = queryString.parse(location.search)\n    const [cakes, setCakes] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading]= useState(true);\n    useEffect(() => {\n        axios({\n            method:\"GET\",\n            url:`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/searchcakes?q=${query.q}`\n        }).then((response) => {\n            console.log(response.data);\n            setCakes(response.data.data);\n            setIsLoading(false);\n            console.log(cakes);\n        }, (error) => { \n            setError(error);\n        })\n    },[query.q]);\n    return (\n        <div>\n       {isLoading ? <div class={loaderStyle}><CircleLoader/></div> : <div>\n            <div style={{display:\"grid\"}}>\n                {cakes.map((each, index) => {\n                    return <Cake key={index} cake={each}/>\n                })}\n            </div>\n            {cakes.length == 0 && <div className=\"alert\">\n                <h1>Sorry no results found for search {query.q}</h1>\n            </div>}\n       </div>}\n       </div>\n\n    )\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}