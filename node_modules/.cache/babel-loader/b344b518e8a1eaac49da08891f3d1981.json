{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-second-saga/src/components/Orders.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getOrderList } from \"../reduxstore\";\nimport moment from \"moment\";\nimport { CircleLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = ({\n  loading,\n  getOrderList,\n  orders\n}) => {\n  _s();\n\n  useEffect(() => {\n    getOrderList();\n  }, []);\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n\n  const getReadableDate = date => {\n    return moment(date).format(\"Do MMM YYYY\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"25px\"\n    },\n    children: orders.map((order, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Date: \", `${getReadableDate(order.orderdate)}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Reception status: \", order.pending ? 'Pending' : 'Order Recieved']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), !order.pending && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Completion Status: \", order.completed ? \"Order fullfilled\" : \"Order to be fullfilled\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            children: [\"Mode of Payment: \", order.mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered table-condensed\",\n            style: {\n              width: \"50rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: order.cakes.map((item, key) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.image,\n                      alt: \"cake img\",\n                      style: {\n                        width: \"60px\",\n                        height: \"60px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.quantity * item.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orders, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Orders;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.orders.loading,\n    orders: state.orders.orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getOrderList: () => dispatch(getOrderList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/components/Orders.js"],"names":["useEffect","connect","getOrderList","moment","CircleLoader","Orders","loading","orders","loaderStyle","position","left","top","zIndex","getReadableDate","date","format","marginLeft","map","order","key","marginTop","orderdate","pending","completed","textTransform","mode","width","cakes","item","image","height","name","quantity","price","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getOrderList } from \"../reduxstore\"\nimport moment from \"moment\"\nimport { CircleLoader } from \"react-spinners\"\nconst Orders = ({loading, getOrderList, orders}) => {\n    useEffect(() => {\n        getOrderList()\n    },[])\n\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n\n    const getReadableDate = date => {\n        return moment(date).format(\"Do MMM YYYY\")\n    }\n\n    return (\n        <div style={{marginLeft:\"25px\"}}>\n             {orders.map((order, key) => {\n                return(<div key={key} style={{marginTop:\"10px\"}}>\n                    <div>\n                        <h4>Date: {`${getReadableDate(order.orderdate)}`}</h4>\n                        <h4>Reception status: {order.pending ? 'Pending' : 'Order Recieved' }</h4>\n                        {!order.pending && <h4>Completion Status: {order.completed ? \"Order fullfilled\" : \"Order to be fullfilled\"} </h4>}\n                        <h4 style={{textTransform:\"capitalize\"}}>Mode of Payment: {order.mode}</h4>\n                    </div>\n                    <div className=\"row\">\n                        <table className=\"table table-bordered table-condensed\" style={{width:\"50rem\"}}>\n                            <thead>\n                                <tr>\n                                    <th>Image</th>\n                                    <th>Name</th>\n                                    <th>Quantity</th>\n                                    <th>Price</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {order.cakes.map((item, key) => {\n                                return (\n                                    <tr key={key}>\n                                        <td>\n                                            <img \n                                                src={item.image} \n                                                alt=\"cake img\" \n                                                style={{width:\"60px\",height:\"60px\"}}\n                                            />\n                                        </td>\n                                        <td>{item.name}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>{item.quantity * item.price}</td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                )\n            })\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading:state.orders.loading,\n        orders:state.orders.orders\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getOrderList: () => dispatch(getOrderList())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)"]},"metadata":{},"sourceType":"module"}