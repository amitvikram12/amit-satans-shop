{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/CakeLIst.js\",\n    _s = $RefreshSig$();\n\nimport Cake from \"./Cake\";\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { CircleLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CakeList({\n  url\n}) {\n  _s();\n\n  const [cakes, setCakes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/allcakes`\n    }).then(response => {\n      console.log(response);\n      setCakes(response.data.data);\n      setLoading(false);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"33% 33% 33%\",\n        gridGap: \"50px\"\n      },\n      children: cakes.map((cake, index) => {\n        return /*#__PURE__*/_jsxDEV(Cake, {\n          cake: cake\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 73\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CakeList, \"NvQT1JNTTliQCKONqnC/61AAuoE=\");\n\n_c = CakeList;\nexport default CakeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CakeList\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/CakeLIst.js"],"names":["Cake","useEffect","useState","axios","CircleLoader","CakeList","url","cakes","setCakes","loading","setLoading","loaderStyle","position","left","top","zIndex","method","process","env","REACT_APP_CAKE_WEBSITE_API_URL","then","response","console","log","data","error","display","gridTemplateColumns","gridGap","map","cake","index"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMS,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,IAAI,EAAC,KAFW;AAGhBC,IAAAA,GAAG,EAAC,KAHY;AAIhBC,IAAAA,MAAM,EAAC;AAJS,GAApB;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC;AACFa,MAAAA,MAAM,EAAC,KADL;AAEFV,MAAAA,GAAG,EAAE,GAAEW,OAAO,CAACC,GAAR,CAAYC,8BAA+B;AAFhD,KAAD,CAAL,CAGGC,IAHH,CAIKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAb,MAAAA,QAAQ,CAACa,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAR;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL,EASKe,KAAD,IAAW;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAXL;AAaH,GAdQ,EAcP,EAdO,CAAT;AAgBA,sBACI;AAAA,cACKhB,OAAO,gBAAG;AAAK,MAAA,KAAK,EAAEE,WAAZ;AAAA,6BAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoD;AAAK,MAAA,KAAK,EAAE;AAACe,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,mBAAmB,EAAC,aAArC;AAAmDC,QAAAA,OAAO,EAAC;AAA3D,OAAZ;AAAA,gBACnDrB,KAAK,CAACsB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,4BACK,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED;AAAZ,WAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA,gBADL;AAGH,OAJA;AADmD;AAAA;AAAA;AAAA;AAAA;AADhE;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAtCQ1B,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import Cake from \"./Cake\";\nimport {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { CircleLoader } from \"react-spinners\";\n\nfunction CakeList({url}) {\n    const [cakes, setCakes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    useEffect(() => {\n        axios({\n            method:\"GET\",\n            url:`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/allcakes`,\n        }).then(\n            (response) => {\n                console.log(response);\n                setCakes(response.data.data);\n                setLoading(false);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    },[])\n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div> : <div style={{display:\"grid\", gridTemplateColumns:\"33% 33% 33%\",gridGap:\"50px\"}}>\n                    {cakes.map((cake, index) => {\n                        return (\n                             <Cake cake={cake} key={index}/>\n                        )\n                    })}\n                </div>}\n        </div>\n        \n        \n    )\n}\n\nexport default CakeList;"]},"metadata":{},"sourceType":"module"}