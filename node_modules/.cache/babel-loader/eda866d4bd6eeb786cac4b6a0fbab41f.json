{"ast":null,"code":"import { put, call } from \"@redux-saga/core/effects\";\nimport history from \"../history\";\nimport axios from \"axios\";\nimport { addCakeOrder, addCakeOrderRequest, addCakeOrderSuccess, addToCartError, addToCartRequest, addToCartSuccess, fetchCartError, fetchCartRequest, fetchCartSuccess, getOrderListError, getOrderListRequest, getOrderListSuccess, removeCartError, removeCartRequest, removeCartSuccess, removeOneFromCartError, removeOneFromCartSuccess } from \"./cartAction\";\nexport function* fetchCartGenerator() {\n  yield put(fetchCartRequest());\n\n  const apiCall = () => {\n    return axios.post(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/cakecart`, {}).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      yield put(fetchCartSuccess(data.data));\n    }\n  } catch (e) {\n    yield put(fetchCartError(e.message));\n  }\n}\nexport function* removeCartGenerator(action) {\n  yield put(removeCartRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/removecakefromcart`;\n    const data = {\n      cakeid: action.cakeid\n    };\n    return axios.post(url, data).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      yield put(removeCartSuccess(action.cakeid));\n    }\n  } catch (e) {\n    yield put(removeCartError(e.message));\n  }\n}\nexport function* addCakeToCartGenerator(action) {\n  yield put(addToCartRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/addcaketocart`;\n    const postData = {\n      name: action.payload.name,\n      cakeid: action.payload.cakeid,\n      price: action.payload.price,\n      weight: action.payload.weight,\n      image: action.payload.image,\n      quantity: 1\n    };\n    return axios.post(url, postData).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      alert(\"Product added to cart successfully\");\n      yield put(addToCartSuccess());\n    }\n  } catch (e) {\n    yield put(addToCartError(e.message));\n  }\n}\nexport function* removeOneFromCartGenerator(action) {\n  yield put(removeCartRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/removeonecakefromcart`;\n    const postData = {\n      cakeid: action.payload\n    };\n    return axios.post(url, postData).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data) {\n      yield put(removeOneFromCartSuccess(action.payload));\n    }\n  } catch (e) {\n    yield put(removeOneFromCartError(e.message));\n  }\n}\nexport function* addCakeOrderGenerator(action) {\n  yield put(addCakeOrderRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/addcakeorder`;\n    const data = action.payload;\n    const header = {\n      headers: {\n        authtoken: localStorage.token\n      }\n    };\n    return axios.post(url, data, header).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data) {\n      yield put(addCakeOrderSuccess());\n      history.push(\"/orders\");\n    }\n  } catch (e) {\n    yield put(addToCartError(e.message));\n  }\n}\nexport function* listOrdersGenerator() {\n  yield put(getOrderListRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/cakeorders`;\n    const headers = {\n      headers: {\n        authtoken: localStorage.token\n      }\n    };\n    return axios.post(url, {}, headers).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      console.log(data.data);\n      yield put(getOrderListSuccess());\n    }\n  } catch (error) {\n    yield put(getOrderListError(error.message));\n  }\n}","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/reduxstore/cart/cartGenerator.js"],"names":["put","call","history","axios","addCakeOrder","addCakeOrderRequest","addCakeOrderSuccess","addToCartError","addToCartRequest","addToCartSuccess","fetchCartError","fetchCartRequest","fetchCartSuccess","getOrderListError","getOrderListRequest","getOrderListSuccess","removeCartError","removeCartRequest","removeCartSuccess","removeOneFromCartError","removeOneFromCartSuccess","fetchCartGenerator","apiCall","post","process","env","REACT_APP_CAKE_WEBSITE_API_URL","then","response","data","catch","error","e","message","removeCartGenerator","action","url","cakeid","addCakeToCartGenerator","postData","name","payload","price","weight","image","quantity","alert","removeOneFromCartGenerator","addCakeOrderGenerator","header","headers","authtoken","localStorage","token","push","listOrdersGenerator","console","log"],"mappings":"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","sourcesContent":["import { put , call } from \"@redux-saga/core/effects\"\nimport history from \"../history\"\nimport axios from \"axios\"\nimport { \n    addCakeOrder,\n    addCakeOrderRequest,\n    addCakeOrderSuccess,\n    addToCartError,\n    addToCartRequest,\n    addToCartSuccess,\n    fetchCartError, \n    fetchCartRequest, \n    fetchCartSuccess, \n    getOrderListError, \n    getOrderListRequest, \n    getOrderListSuccess, \n    removeCartError, \n    removeCartRequest, \n    removeCartSuccess, \n    removeOneFromCartError, \n    removeOneFromCartSuccess\n} from \"./cartAction\"\n\nexport function* fetchCartGenerator() {\n    yield put(fetchCartRequest())\n    const apiCall = () => {\n        return axios.post(`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/cakecart`, {}).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n\n    try{\n        const data = yield call(apiCall)\n        if (data.data) {\n            yield put(fetchCartSuccess(data.data))\n        }\n    }\n    catch(e) {\n        yield put(fetchCartError(e.message))\n    }\n    \n}\n\nexport function* removeCartGenerator(action) {\n    yield put(removeCartRequest())\n\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/removecakefromcart`\n        const data = {cakeid:action.cakeid}\n        return axios.post(url, data).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n    try{\n        const data = yield call(apiCall)\n        if (data.data) {\n            yield put(removeCartSuccess(action.cakeid))\n        }\n    }\n    catch(e) {\n        yield put(removeCartError(e.message))\n    }\n}\n\nexport function* addCakeToCartGenerator(action) {\n    yield put(addToCartRequest())\n\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/addcaketocart`\n        const postData = {\n            name:action.payload.name,\n            cakeid:action.payload.cakeid,\n            price:action.payload.price,\n            weight: action.payload.weight,\n            image:action.payload.image,\n            quantity:1\n        }\n        return axios.post(url, postData).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n    try{\n        const data = yield call(apiCall)\n        if (data.data) {\n            alert(\"Product added to cart successfully\")\n            yield put(addToCartSuccess())\n        }\n    }\n   catch (e) {\n       yield put(addToCartError(e.message))\n   }\n    \n}\n\nexport function* removeOneFromCartGenerator(action) {\n    yield put(removeCartRequest())\n\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/removeonecakefromcart`\n        const postData = {cakeid:action.payload}\n\n        return axios.post(url, postData).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n\n    try{\n        const data = yield call(apiCall)\n        if (data) {\n            yield put(removeOneFromCartSuccess(action.payload))\n        }\n    }\n    catch(e) {\n        yield put(removeOneFromCartError(e.message))\n    }\n}\n\nexport function* addCakeOrderGenerator(action) {\n    yield put(addCakeOrderRequest())\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/addcakeorder`\n        const data = action.payload\n        const header = {\n            headers:{\n                authtoken: localStorage.token\n            }\n        }\n        return axios.post(url, data, header).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n\n\n    try {\n        const data = yield call(apiCall)\n        if (data) {\n            yield put(addCakeOrderSuccess())\n            history.push(\"/orders\")\n        }\n    }\n    catch(e) {\n        yield put(addToCartError(e.message))\n    }\n\n}\n\nexport function* listOrdersGenerator() {\n    yield put(getOrderListRequest())\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/cakeorders`\n        const headers = {\n            headers:{\n                authtoken:localStorage.token\n            }\n        }\n        return axios.post(url,{},headers).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n\n    try {\n        const data = yield call(apiCall)\n        if (data.data) {\n            console.log(data.data)\n            yield put(getOrderListSuccess())\n        }\n        \n    } catch (error) {\n        yield put(getOrderListError(error.message))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}