{"ast":null,"code":"import { ADD_TO_CART_REQUEST, ADD_TO_CART_SUCCESS, ADD_TO_CART_ERROR, FETCH_CART_ERROR, FETCH_CART_REQUEST, FETCH_CART_SUCCESS, REMOVE_CART_ERROR, REMOVE_CART_REQUEST, REMOVE_CART_SUCCESS, REMOVE_ONE_FROM_CART_REQUEST, REMOVE_ONE_FROM_CART_SUCCESS, REMOVE_ONE_FROM_CART_ERROR, ADD_CAKE_ORDER_REQUEST, ADD_CAKE_ORDER_SUCCESS, ADD_CAKE_ORDER_ERROR, LIST_ORDER_REQUEST } from \"./cartTypes\";\nconst initialState = {\n  loading: false,\n  cart: [],\n  error: '',\n  cartCount: 0\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CART_REQUEST:\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case FETCH_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        cart: action.payload,\n        error: '',\n        cartCount: getCartCount(action.payload)\n      };\n\n    case FETCH_CART_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case ADD_TO_CART_REQUEST:\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case ADD_TO_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: '',\n        cartCount: state.cartCount + 1\n      };\n\n    case ADD_TO_CART_ERROR:\n      return { ...state,\n        loading: false,\n        error: ''\n      };\n\n    case REMOVE_CART_REQUEST:\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case REMOVE_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        cart: state.cart.filter(item => item.cakeid !== action.payload),\n        error: '',\n        cartCount: removeCartCount(state.cart, state.cartCount, action.payload)\n      };\n\n    case REMOVE_CART_ERROR:\n      return { ...state,\n        loading: false,\n        error: ''\n      };\n\n    case ADD_CAKE_ORDER_REQUEST:\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case ADD_CAKE_ORDER_SUCCESS:\n      return { ...state,\n        loading: false,\n        cart: [],\n        error: '',\n        cartCount: 0\n      };\n\n    case ADD_CAKE_ORDER_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case REMOVE_ONE_FROM_CART_REQUEST:\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case REMOVE_ONE_FROM_CART_SUCCESS:\n      return { ...state,\n        loading: false,\n        cart: state.cart.map(item => {\n          if (item.cakeid == action.payload) {\n            item.quantity--;\n          }\n\n          return item;\n        }),\n        error: '',\n        cartCount: state.cartCount - 1\n      };\n\n    case REMOVE_ONE_FROM_CART_ERROR:\n      return { ...state,\n        loading: false,\n        error: ''\n      };\n\n    case LIST_ORDER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getCartCount = cart => {\n  let cartCount = 0;\n  cart.forEach(item => {\n    cartCount += item.quantity;\n  });\n  return cartCount;\n};\n\nconst removeCartCount = (cart, cartCount, cakeid) => {\n  const item = cart.filter(item => item.cakeid === cakeid);\n  return cartCount - item[0].quantity;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/reduxstore/cart/cartReducer.js"],"names":["ADD_TO_CART_REQUEST","ADD_TO_CART_SUCCESS","ADD_TO_CART_ERROR","FETCH_CART_ERROR","FETCH_CART_REQUEST","FETCH_CART_SUCCESS","REMOVE_CART_ERROR","REMOVE_CART_REQUEST","REMOVE_CART_SUCCESS","REMOVE_ONE_FROM_CART_REQUEST","REMOVE_ONE_FROM_CART_SUCCESS","REMOVE_ONE_FROM_CART_ERROR","ADD_CAKE_ORDER_REQUEST","ADD_CAKE_ORDER_SUCCESS","ADD_CAKE_ORDER_ERROR","LIST_ORDER_REQUEST","initialState","loading","cart","error","cartCount","cartReducer","state","action","type","payload","getCartCount","filter","item","cakeid","removeCartCount","map","quantity","forEach"],"mappings":"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","sourcesContent":["import { \n    ADD_TO_CART_REQUEST, \n    ADD_TO_CART_SUCCESS, \n    ADD_TO_CART_ERROR,  \n    FETCH_CART_ERROR, \n    FETCH_CART_REQUEST, \n    FETCH_CART_SUCCESS, \n    REMOVE_CART_ERROR, \n    REMOVE_CART_REQUEST, \n    REMOVE_CART_SUCCESS,\n    REMOVE_ONE_FROM_CART_REQUEST,\n    REMOVE_ONE_FROM_CART_SUCCESS,\n    REMOVE_ONE_FROM_CART_ERROR, \n    ADD_CAKE_ORDER_REQUEST,\n    ADD_CAKE_ORDER_SUCCESS,\n    ADD_CAKE_ORDER_ERROR,\n    LIST_ORDER_REQUEST\n} from \"./cartTypes\"\n\nconst initialState = {\n    loading:false,\n    cart:[],\n    error:'',\n    cartCount:0\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FETCH_CART_REQUEST:\n            return {\n                ...state,\n                loading:true,\n                error:''\n            }\n        case FETCH_CART_SUCCESS:\n            return {\n                ...state,\n                loading:false,\n                cart:action.payload,\n                error:'',\n                cartCount:getCartCount(action.payload)\n            }\n        case FETCH_CART_ERROR:\n            return {\n                ...state,\n                loading:false,\n                error:action.payload\n            }\n        case ADD_TO_CART_REQUEST:\n            return {\n                ...state,\n                loading:true,\n                error:''\n            }\n        case ADD_TO_CART_SUCCESS:\n            return {\n                ...state,\n                loading:false,\n                error:'',\n                cartCount:state.cartCount + 1\n            }\n        case ADD_TO_CART_ERROR:\n            return {\n                ...state,\n                loading:false,\n                error:''\n            }\n        case REMOVE_CART_REQUEST:\n            return {\n                ...state,\n                loading:true,\n                error:''\n            }\n        case REMOVE_CART_SUCCESS:\n            return {\n                ...state,\n                loading:false,\n                cart:state.cart.filter(item => item.cakeid !== action.payload),\n                error:'',\n                cartCount: removeCartCount(state.cart, state.cartCount, action.payload)\n            }\n        case REMOVE_CART_ERROR:\n            return {\n                ...state,\n                loading:false,\n                error:''\n            }\n        case ADD_CAKE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading:true,\n                error:''\n            }\n        case ADD_CAKE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading:false,\n                cart:[],\n                error:'',\n                cartCount:0\n            }\n        case ADD_CAKE_ORDER_ERROR:\n            return {\n                ...state,\n                loading:false,\n                error:action.payload\n            }\n        case REMOVE_ONE_FROM_CART_REQUEST:\n            return {\n                ...state,\n                loading:true,\n                error:''\n            }\n        case REMOVE_ONE_FROM_CART_SUCCESS:\n            return {\n                ...state,\n                loading:false,\n                cart:state.cart.map(item => {\n                    if (item.cakeid == action.payload) {\n                        item.quantity--\n                    }\n                    return item\n                }),\n                error:'',\n                cartCount: state.cartCount - 1\n            }\n        case REMOVE_ONE_FROM_CART_ERROR:\n            return {\n                ...state,\n                loading:false,\n                error:''\n            }\n        case LIST_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                \n            }\n        default: return state\n    }\n}\n\nconst getCartCount = (cart) => {\n    let cartCount = 0;\n    cart.forEach(item => {\n        cartCount += item.quantity\n    })\n    return cartCount\n}\n\nconst removeCartCount = (cart, cartCount, cakeid) => {\n    const item = cart.filter(item => item.cakeid === cakeid)\n    return cartCount - item[0].quantity\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}