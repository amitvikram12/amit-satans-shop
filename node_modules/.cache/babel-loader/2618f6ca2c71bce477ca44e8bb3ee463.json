{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { fetchLogin } from '../reduxstore/login/loginAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  error,\n  loading\n}) {\n  _s();\n\n  let textData = \"\";\n  let typedPassword = \"\";\n  const [emailError, setEmailError] = useState(\"\");\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  const login = event => {\n    setLoading(true);\n    let validationError = false;\n    event.preventDefault();\n\n    if (textData === \"\") {\n      setEmailError(\"Email is required\");\n      validationError = true;\n    } else if (!validateEmail(textData)) {\n      setEmailError(\"Invalid email\");\n      validationError = true;\n    }\n\n    if (!validationError) {\n      fetchLogin(textData, typedPassword); // this.props.history.push(\"/\");\n    }\n  };\n\n  const getTypedEmail = event => {\n    textData = event.target.value;\n  };\n\n  const getTypedPassword = event => {\n    typedPassword = event.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getTypedEmail,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type your email here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontSize: \"15px\"\n          },\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: getTypedPassword,\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Type your password here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          className: \"btn btn-danger\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"btn btn-danger\",\n              href: \"#\",\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"IHj4LI5BSDx22lQ/G8AXWhgxsOk=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.login.loading,\n    error: state.login.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchLogin: (email, password) => dispatch(fetchLogin(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Login.js"],"names":["Link","useState","axios","CircleLoader","connect","fetchLogin","Login","error","loading","textData","typedPassword","emailError","setEmailError","loaderStyle","position","left","top","zIndex","validateEmail","email","re","test","login","event","setLoading","validationError","preventDefault","getTypedEmail","target","value","getTypedPassword","color","fontSize","mapStateToProps","state","mapDispatchToProps","dispatch","password"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { fetchLogin } from '../reduxstore/login/loginAction';\n\nfunction Login({error, loading}){\n    let textData =\"\";\n    let typedPassword =\"\";\n    const [emailError, setEmailError] = useState(\"\")\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    const validateEmail = (email) => {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n    }\n    const login = (event) => {\n        setLoading(true);\n        let validationError = false;\n        event.preventDefault();\n        if (textData === \"\") {\n            setEmailError(\"Email is required\");\n            validationError = true;\n        }\n        else if (!validateEmail(textData)) {\n            setEmailError(\"Invalid email\");\n            validationError = true;\n        }\n        if (!validationError) {\n            fetchLogin(textData, typedPassword);\n            // this.props.history.push(\"/\");\n        }\n    }\n\n    const getTypedEmail = (event) => {\n        textData = event.target.value;\n    }\n\n    const getTypedPassword = (event) => {\n        typedPassword = event.target.value;\n    }\n\n\n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div>:<div class=\"container mt-5\">\n                <div className=\"form-group\">\n                    <input onChange={getTypedEmail} type=\"text\"className=\"form-control\" placeholder=\"Type your email here...\"/>\n                    <div style={{color:\"red\",fontSize:\"15px\"}}>{emailError}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input onChange={getTypedPassword} type=\"password\"className=\"form-control\" placeholder=\"Type your password here...\"/>\n                </div>\n                <div className=\"form-group\">\n                <button onClick={login} className=\"btn btn-danger\">Login</button>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <Link to=\"/forgot\">\n                            <a className=\"btn btn-danger\" href=\"#\">Forgot password</a>\n                        </Link>\n                    </div>\n                </div>\n            </div>}\n            <div className=\"alert\">\n                {error}\n            </div>\n        </div>\n            \n            \n        \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading:state.login.loading,\n        error:state.login.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchLogin: (email, password) => dispatch(fetchLogin(email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}