{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { CircleLoader } from \"react-spinners\";\nimport { connect } from 'react-redux';\nimport { fetchCart, removeFromCart } from \"../reduxstore\";\nimport CartOptions from \"./CartOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart({\n  cart,\n  loading,\n  fetchCart,\n  removeFromCart\n}) {\n  _s();\n\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n  useEffect(() => {\n    fetchCart();\n  }, []);\n\n  const getQtyValue = event => event.target.value;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cart.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: \"cake img\",\n                style: {\n                  width: \"60px\",\n                  height: \"60px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity > 1 ? /*#__PURE__*/_jsxDEV(CartOptions, {\n                qtyCount: item.quantity,\n                onChangeHandler: getQtyValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 62\n              }, this) : item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => removeFromCart(item.cakeid),\n                children: \"Remove from cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 72\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.cart.loading,\n    cart: state.cart.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCart: () => dispatch(fetchCart()),\n    removeFromCart: data => dispatch(removeFromCart(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Cart.js"],"names":["axios","useEffect","CircleLoader","connect","fetchCart","removeFromCart","CartOptions","Cart","cart","loading","loaderStyle","position","left","top","zIndex","getQtyValue","event","target","value","map","item","index","image","width","height","name","price","quantity","cakeid","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { CircleLoader } from \"react-spinners\";\nimport {connect} from 'react-redux'\nimport { fetchCart, removeFromCart } from \"../reduxstore\";\nimport CartOptions from \"./CartOptions\";\n\nfunction Cart({cart, loading, fetchCart, removeFromCart}) {\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    useEffect(() => {\n        fetchCart()\n    },[]);\n\n    const getQtyValue = event => event.target.value \n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div>: <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Image</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        cart.map((item, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>\n                                        <img \n                                        src={item.image} \n                                        alt=\"cake img\" \n                                        style={{width:\"60px\",height:\"60px\"}}\n                                        />\n                                    </td>\n                                    <td>{item.name}</td>\n                                    <td>${item.price}</td>\n                                    <td>\n                                        {item.quantity > 1 ? <CartOptions \n                                        qtyCount={item.quantity} \n                                        onChangeHandler={getQtyValue}\n                                        /> : item.quantity}  \n                                    </td>\n                                    <td>\n                                        <button \n                                        className=\"btn btn-danger\" \n                                        onClick={() => removeFromCart(item.cakeid)}\n                                        >\n                                            Remove from cart\n                                        </button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>}\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        loading:state.cart.loading,\n        cart:state.cart.cart\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCart:() => dispatch(fetchCart()),\n        removeFromCart: (data) => dispatch(removeFromCart(data))\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart);"]},"metadata":{},"sourceType":"module"}