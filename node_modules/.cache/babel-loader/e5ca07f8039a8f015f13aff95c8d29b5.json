{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/CakeLIst.js\",\n    _s = $RefreshSig$();\n\nimport Cake from \"./Cake\";\nimport { useEffect } from 'react';\nimport { CircleLoader } from \"react-spinners\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCakes } from \"../reduxstore/cakes/cakeActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CakeList = ({\n  loading,\n  cakes,\n  error,\n  fetchAllCakes\n}) => {\n  _s();\n\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n  useEffect(() => {\n    fetchAllCakes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"33% 33% 33%\",\n        gridColumnGap: \"30px\",\n        gridRowGap: \"20px\"\n      },\n      children: cakes.map((cake, index) => {\n        return /*#__PURE__*/_jsxDEV(Cake, {\n          cake: cake\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 30\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 73\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CakeList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CakeList;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.cake.loading,\n    cakes: state.cake.cakes,\n    error: state.cake.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllCakes: () => dispatch(fetchAllCakes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeList);\n\nvar _c;\n\n$RefreshReg$(_c, \"CakeList\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/CakeLIst.js"],"names":["Cake","useEffect","CircleLoader","connect","fetchAllCakes","CakeList","loading","cakes","error","loaderStyle","position","left","top","zIndex","display","gridTemplateColumns","gridColumnGap","gridRowGap","map","cake","index","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,iCAA9B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,KAAjB;AAAwBJ,EAAAA;AAAxB,CAAD,KAA4C;AAAA;;AAEzD,QAAMK,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,IAAI,EAAC,KAFW;AAGhBC,IAAAA,GAAG,EAAC,KAHY;AAIhBC,IAAAA,MAAM,EAAC;AAJS,GAApB;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,cACKE,OAAO,gBAAG;AAAK,MAAA,KAAK,EAAEG,WAAZ;AAAA,6BAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoD;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,mBAAmB,EAAC,aAArC;AAAmDC,QAAAA,aAAa,EAAC,MAAjE;AAAwEC,QAAAA,UAAU,EAAC;AAAnF,OAAZ;AAAA,gBACnDV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,4BACK,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED;AAAZ,WAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA,gBADL;AAGH,OAJA;AADmD;AAAA;AAAA;AAAA;AAAA;AADhE;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzBD;;GAAMf,Q;;KAAAA,Q;;AA2BN,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHhB,IAAAA,OAAO,EAACgB,KAAK,CAACH,IAAN,CAAWb,OADhB;AAEHC,IAAAA,KAAK,EAACe,KAAK,CAACH,IAAN,CAAWZ,KAFd;AAGHC,IAAAA,KAAK,EAACc,KAAK,CAACH,IAAN,CAAWX;AAHd,GAAP;AAKH,CAND;;AAQA,MAAMe,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHpB,IAAAA,aAAa,EAAC,MAAMoB,QAAQ,CAACpB,aAAa,EAAd;AADzB,GAAP;AAGH,CAJD;;AAKA,eAAeD,OAAO,CAACkB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ClB,QAA5C,CAAf","sourcesContent":["import Cake from \"./Cake\";\nimport {useEffect} from 'react';\nimport { CircleLoader } from \"react-spinners\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCakes } from \"../reduxstore/cakes/cakeActions\";\n\nconst CakeList = ({loading, cakes, error, fetchAllCakes}) => {\n\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    useEffect(() => {\n        fetchAllCakes();\n    },[])\n\n    return (\n        <div>\n            {loading ? <div style={loaderStyle}><CircleLoader/></div> : <div style={{display:\"grid\", gridTemplateColumns:\"33% 33% 33%\",gridColumnGap:\"30px\",gridRowGap:\"20px\"}}>\n                    {cakes.map((cake, index) => {\n                        return (\n                             <Cake cake={cake} key={index}/>\n                        )\n                    })}\n                </div>}\n        </div>\n        \n        \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading:state.cake.loading,\n        cakes:state.cake.cakes,\n        error:state.cake.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllCakes:() => dispatch(fetchAllCakes())\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CakeList);"]},"metadata":{},"sourceType":"module"}