{"ast":null,"code":"import{useEffect}from\"react\";import{connect}from\"react-redux\";import{getOrderList as _getOrderList}from\"../reduxstore\";import moment from\"moment\";import{CircleLoader}from\"react-spinners\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Orders=function Orders(_ref){var loading=_ref.loading,getOrderList=_ref.getOrderList,orders=_ref.orders;useEffect(function(){getOrderList();},[]);var loaderStyle={position:\"absolute\",left:\"50%\",top:\"50%\",zIndex:\"999\"};var getReadableDate=function getReadableDate(date){return moment(date).format(\"Do MMM YYYY\");};return/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:\"25px\",position:\"relative\"},children:loading?/*#__PURE__*/_jsx(CircleLoader,{style:loaderStyle}):orders.map(function(order,key){return/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Date: \",\"\".concat(getReadableDate(order.orderdate))]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Reception status: \",order.pending?'Pending':'Order Recieved']}),!order.pending&&/*#__PURE__*/_jsxs(\"h4\",{children:[\"Completion Status: \",order.completed?\"Order fullfilled\":\"Order to be fullfilled\",\" \"]}),/*#__PURE__*/_jsxs(\"h4\",{style:{textTransform:\"capitalize\"},children:[\"Mode of Payment: \",order.mode]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-condensed\",style:{width:\"50rem\"},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Image\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:order.cakes.map(function(item,key){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:item.image,alt:\"cake img\",style:{width:\"60px\",height:\"60px\"}})}),/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.quantity}),/*#__PURE__*/_jsx(\"td\",{children:item.quantity*item.price})]},key);})})]})})]},key);})});};var mapStateToProps=function mapStateToProps(state){return{loading:state.orders.loading,orders:state.orders.orders};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getOrderList:function getOrderList(){return dispatch(_getOrderList());}};};export default connect(mapStateToProps,mapDispatchToProps)(Orders);","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/components/Orders.js"],"names":["useEffect","connect","getOrderList","moment","CircleLoader","Orders","loading","orders","loaderStyle","position","left","top","zIndex","getReadableDate","date","format","marginLeft","map","order","key","marginTop","orderdate","pending","completed","textTransform","mode","width","cakes","item","image","height","name","quantity","price","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getOrderList } from \"../reduxstore\"\nimport moment from \"moment\"\nimport { CircleLoader } from \"react-spinners\"\nconst Orders = ({loading, getOrderList, orders}) => {\n    useEffect(() => {\n        getOrderList()\n    },[])\n\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n\n    const getReadableDate = date => {\n        return moment(date).format(\"Do MMM YYYY\")\n    }\n\n    return (\n        <div style={{marginLeft:\"25px\", position:\"relative\"}}>\n            {loading ? <CircleLoader style={loaderStyle}/> : orders.map((order, key) => {\n                return(<div key={key} style={{marginTop:\"10px\"}}>\n                    <div>\n                        <h4>Date: {`${getReadableDate(order.orderdate)}`}</h4>\n                        <h4>Reception status: {order.pending ? 'Pending' : 'Order Recieved' }</h4>\n                        {!order.pending && <h4>Completion Status: {order.completed ? \"Order fullfilled\" : \"Order to be fullfilled\"} </h4>}\n                        <h4 style={{textTransform:\"capitalize\"}}>Mode of Payment: {order.mode}</h4>\n                    </div>\n                    <div className=\"row\">\n                        <table className=\"table table-bordered table-condensed\" style={{width:\"50rem\"}}>\n                            <thead>\n                                <tr>\n                                    <th>Image</th>\n                                    <th>Name</th>\n                                    <th>Quantity</th>\n                                    <th>Price</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {order.cakes.map((item, key) => {\n                                return (\n                                    <tr key={key}>\n                                        <td>\n                                            <img \n                                                src={item.image} \n                                                alt=\"cake img\" \n                                                style={{width:\"60px\",height:\"60px\"}}\n                                            />\n                                        </td>\n                                        <td>{item.name}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>{item.quantity * item.price}</td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                )\n            })\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading:state.orders.loading,\n        orders:state.orders.orders\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getOrderList: () => dispatch(getOrderList())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)"]},"metadata":{},"sourceType":"module"}