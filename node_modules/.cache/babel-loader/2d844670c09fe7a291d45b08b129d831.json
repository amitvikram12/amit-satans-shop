{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/Signup.js\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n\n    this.validateEmail = email => {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    };\n\n    this.subscribeMail = event => {\n      event.preventDefault();\n\n      if (this.textData === \"\") {\n        let currState = { ...this.state\n        };\n        currState.email.message = \"Email is required\";\n        this.setState({\n          currState\n        });\n      } else if (this.validateEmail(this.textData)) {\n        let currState = { ...this.state\n        };\n        currState.email.message = \"Email is invalid\";\n        this.setState({\n          currState\n        });\n      }\n\n      if (this.typedPassword.length < 8) {\n        let currState = { ...this.state\n        };\n        currState.password.message = \"Password should be atleast 8 characters long\";\n        this.setState({\n          currState\n        });\n      } else {\n        this.setState(this.setState({\n          email: {\n            value: this.textData,\n            message: \"\"\n          },\n          password: {\n            value: this.typedPassword,\n            message: \"\"\n          }\n        }));\n        console.log({\n          name: this.textData,\n          password: this.typedPassword\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.getTypedText = event => {\n      this.textData = event.target.value;\n    };\n\n    this.getTypedPassword = event => {\n      this.typedPassword = event.target.value;\n    };\n\n    this.textData = \"\";\n    this.typedPassword = \"\";\n    this.state = {\n      email: {\n        value: \"\",\n        message: \"\"\n      },\n      password: {\n        value: \"\",\n        message: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.getTypedText,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type your email here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-tooltip\",\n          children: this.state.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.getTypedPassword,\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Type your password here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-tooltip\",\n          children: this.state.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: this.subscribeMail,\n          value: \"Subscribe\",\n          className: \"btn btn-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Signup.js"],"names":["Component","Signup","constructor","validateEmail","email","re","test","subscribeMail","event","preventDefault","textData","currState","state","message","setState","typedPassword","length","password","value","console","log","name","getTypedText","target","getTypedPassword","render","messages"],"mappings":"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","sourcesContent":["import {Component} from 'react';\n\nclass Signup extends Component {\n    constructor() {\n        super();\n        this.textData = \"\";\n        this.typedPassword = \"\";\n        this.state = {\n            email: {\n                value:\"\",\n                message:\"\"\n            },\n            password: {\n                value:\"\",\n                message:\"\"\n            }\n        };\n    }\n\n    validateEmail = (email) => {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n    subscribeMail = (event) => {\n        event.preventDefault();\n        if (this.textData === \"\") {\n            let currState = {...this.state};\n            currState.email.message = \"Email is required\"\n            this.setState({currState});\n        }\n        else if (this.validateEmail(this.textData)) {\n            let currState = {...this.state};\n            currState.email.message = \"Email is invalid\"\n            this.setState({currState});\n        }\n        if (this.typedPassword.length < 8) {\n            let currState = {...this.state};\n            currState.password.message = \"Password should be atleast 8 characters long\"\n            this.setState({currState}); \n        }\n        else {\n            this.setState(this.setState({email:{value:this.textData, message:\"\"}, password:{value:this.typedPassword, message:\"\"}}));\n            console.log({name:this.textData, password:this.typedPassword});\n        }\n        console.log(this.state)\n    }\n\n    getTypedText = (event) => {\n        this.textData = event.target.value;\n    }\n\n    getTypedPassword = (event) => {\n        this.typedPassword = event.target.value;\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <div>\n                    {this.state.messages}\n                </div>\n                <div className=\"form-group\">\n                    <input onChange={this.getTypedText} type=\"text\"className=\"form-control\" placeholder=\"Type your email here...\"/>\n                    <div className=\"invalid-tooltip\">{this.state.email.message}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input onChange={this.getTypedPassword} type=\"password\"className=\"form-control\" placeholder=\"Type your password here...\"/>\n                    <div className=\"invalid-tooltip\">{this.state.password.message}</div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" onClick={this.subscribeMail} value=\"Subscribe\" className=\"btn btn-danger\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}