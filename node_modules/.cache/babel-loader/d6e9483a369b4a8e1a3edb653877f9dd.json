{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-second-saga/src/components/Orders.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getOrderList } from \"../reduxstore\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = ({\n  loading,\n  getOrderList,\n  orders\n}) => {\n  _s();\n\n  useEffect(() => {\n    getOrderList();\n  }, []);\n\n  const getReadableDate = date => {\n    return moment(date).format(\"Do MMM YYYY\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: orders.map(order => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Date: \", `${getReadableDate(order.orderdate)}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Reception status: \", order.pending ? 'Pending' : 'Order Recieved']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), !order.pending && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Completion Status: \", order.completed ? \"Order fullfilled\" : \"Order to be fullfilled\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Mode of Payment: \", order.mode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), order.cakes.map(() => {})]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orders, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Orders;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.orders.loading,\n    orders: state.orders.orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getOrderList: () => dispatch(getOrderList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/components/Orders.js"],"names":["useEffect","connect","getOrderList","moment","Orders","loading","orders","getReadableDate","date","format","map","order","orderdate","pending","completed","mode","cakes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUH,EAAAA,YAAV;AAAwBI,EAAAA;AAAxB,CAAD,KAAqC;AAAA;;AAChDN,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY;AACf,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMK,eAAe,GAAGC,IAAI,IAAI;AAC5B,WAAOL,MAAM,CAACK,IAAD,CAAN,CAAaC,MAAb,CAAoB,aAApB,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,cACKH,MAAM,CAACI,GAAP,CAAYC,KAAD,IAAW;AACnB,0BAAO;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAA,iCAAY,GAAEJ,eAAe,CAACI,KAAK,CAACC,SAAP,CAAkB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,6CAAuBD,KAAK,CAACE,OAAN,GAAgB,SAAhB,GAA4B,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGK,CAACF,KAAK,CAACE,OAAP,iBAAkB;AAAA,8CAAwBF,KAAK,CAACG,SAAN,GAAkB,kBAAlB,GAAuC,wBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHvB,eAII;AAAA,4CAAsBH,KAAK,CAACI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKKJ,KAAK,CAACK,KAAN,CAAYN,GAAZ,CAAgB,MAAM,CAEtB,CAFA,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAWH,KAZA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3BD;;GAAMN,M;;KAAAA,M;;AA6BN,MAAMa,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,OAAO,EAACa,KAAK,CAACZ,MAAN,CAAaD,OADlB;AAEHC,IAAAA,MAAM,EAACY,KAAK,CAACZ,MAAN,CAAaA;AAFjB,GAAP;AAIH,CALD;;AAOA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHlB,IAAAA,YAAY,EAAE,MAAMkB,QAAQ,CAAClB,YAAY,EAAb;AADzB,GAAP;AAGH,CAJD;;AAKA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,MAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getOrderList } from \"../reduxstore\"\nimport moment from \"moment\"\nconst Orders = ({loading, getOrderList, orders}) => {\n    useEffect(() => {\n        getOrderList()\n    },[])\n\n    const getReadableDate = date => {\n        return moment(date).format(\"Do MMM YYYY\")\n    }\n\n    return (\n        <div>\n            {orders.map((order) => {\n                return(<div>\n                    <div className=\"row\">\n                        <h4>Date: {`${getReadableDate(order.orderdate)}`}</h4>\n                        <h4>Reception status: {order.pending ? 'Pending' : 'Order Recieved' }</h4>\n                        {!order.pending && <h4>Completion Status: {order.completed ? \"Order fullfilled\" : \"Order to be fullfilled\"} </h4>}\n                        <h4>Mode of Payment: {order.mode}</h4>\n                        {order.cakes.map(() => {\n\n                        })}\n                    </div>\n                </div>)\n            })\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading:state.orders.loading,\n        orders:state.orders.orders\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getOrderList: () => dispatch(getOrderList())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)"]},"metadata":{},"sourceType":"module"}