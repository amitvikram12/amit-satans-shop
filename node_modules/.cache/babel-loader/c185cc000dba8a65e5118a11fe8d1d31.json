{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/react-project/react-first/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Cake from './Cake';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  console.log(props);\n  const location = useLocation();\n  const loaderStyle = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    zIndex: \"999\"\n  };\n  console.log(location);\n  let query = queryString.parse(location.search);\n  const [cakes, setCakes] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/searchcakes?q=${query.q}`\n    }).then(response => {\n      console.log(response.data);\n      setCakes(response.data.data);\n      setIsLoading(false);\n      console.log(cakes);\n    }, error => {\n      setError(error);\n    });\n  }, [query.q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: loaderStyle,\n      children: /*#__PURE__*/_jsxDEV(CircleLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"33% 33% 33%\",\n          gridGap: \"50px\"\n        },\n        children: cakes.map((each, index) => {\n          return /*#__PURE__*/_jsxDEV(Cake, {\n            cake: each\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), cakes.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sorry no results found for search \", query.q]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 70\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"cNXI1HDHECco1tlN1urBy/iDC3k=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\nexport default connect()(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/neosoft/react-project/react-first/src/components/Search.js"],"names":["axios","queryString","useEffect","useState","useLocation","Cake","CircleLoader","connect","Search","props","console","log","location","loaderStyle","position","left","top","zIndex","query","parse","search","cakes","setCakes","error","setError","isLoading","setIsLoading","method","url","process","env","REACT_APP_CAKE_WEBSITE_API_URL","q","then","response","data","display","gridTemplateColumns","gridGap","map","each","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,WAAW,GAAG;AAChBC,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,IAAI,EAAC,KAFW;AAGhBC,IAAAA,GAAG,EAAC,KAHY;AAIhBC,IAAAA,MAAM,EAAC;AAJS,GAApB;AAMAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,MAAIM,KAAK,GAAGjB,WAAW,CAACkB,KAAZ,CAAkBP,QAAQ,CAACQ,MAA3B,CAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA2BvB,QAAQ,CAAC,IAAD,CAAzC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAAC;AACF2B,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,kBAAiBb,KAAK,CAACc,CAAE;AAFzE,KAAD,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;AAClBxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAQ,CAACC,IAArB;AACAb,MAAAA,QAAQ,CAACY,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,KARD,EAQIE,KAAD,IAAW;AACVC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVD;AAWH,GAZQ,EAYP,CAACL,KAAK,CAACc,CAAP,CAZO,CAAT;AAaA,sBACI;AAAA,cACAP,SAAS,gBAAG;AAAK,MAAA,KAAK,EAAEZ,WAAZ;AAAA,6BAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAoD;AAAA,8BACzD;AAAK,QAAA,KAAK,EAAE;AAACuB,UAAAA,OAAO,EAAC,MAAT;AAAiBC,UAAAA,mBAAmB,EAAC,aAArC;AAAmDC,UAAAA,OAAO,EAAC;AAA3D,SAAZ;AAAA,kBACKjB,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,8BAAO,QAAC,IAAD;AAAkB,YAAA,IAAI,EAAED;AAAxB,aAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cADyD,EAMxDpB,KAAK,CAACqB,MAAN,IAAgB,CAAhB,iBAAqB;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BAClB;AAAA,2DAAuCxB,KAAK,CAACc,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADkB;AAAA;AAAA;AAAA;AAAA,cANmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAD7D;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1CD;;GAAMxB,M;UAEeJ,W;;;KAFfI,M;AA4CN,eAAeD,OAAO,GAAGC,MAAH,CAAtB","sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Cake from './Cake';\nimport { CircleLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\n\nconst Search = (props) => {\n    console.log(props)\n    const location = useLocation();\n    const loaderStyle = {\n        position:\"absolute\",\n        left:\"50%\",\n        top:\"50%\",\n        zIndex:\"999\",\n    }\n    console.log(location);\n    let query = queryString.parse(location.search)\n    const [cakes, setCakes] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading]= useState(true);\n    useEffect(() => {\n        axios({\n            method:\"GET\",\n            url:`${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/searchcakes?q=${query.q}`\n        }).then((response) => {\n            console.log(response.data);\n            setCakes(response.data.data);\n            setIsLoading(false);\n            console.log(cakes);\n        }, (error) => { \n            setError(error);\n        })\n    },[query.q]);\n    return (\n        <div>\n       {isLoading ? <div class={loaderStyle}><CircleLoader/></div> : <div>\n            <div style={{display:\"grid\", gridTemplateColumns:\"33% 33% 33%\",gridGap:\"50px\"}}>\n                {cakes.map((each, index) => {\n                    return <Cake key={index} cake={each}/>\n                })}\n            </div>\n            {cakes.length == 0 && <div className=\"alert\">\n                <h1>Sorry no results found for search {query.q}</h1>\n            </div>}\n       </div>}\n       </div>\n\n    )\n}\n\nexport default connect()(Search);"]},"metadata":{},"sourceType":"module"}