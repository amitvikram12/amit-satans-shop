{"ast":null,"code":"import { call, put } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nimport { fetchAllCakesError, fetchAllCakesRequest, fetchAllCakesSuccess, fetchSearchCakesError, fetchSearchCakesRequest, fetchSearchCakesSuccess } from \"./cakeActions\";\nexport function* fetchAllCakesGenerator() {\n  yield put(fetchAllCakesRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/allcakes`;\n    return axios.get(url).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      yield put(fetchAllCakesSuccess(data.data));\n    }\n  } catch (e) {\n    yield put(fetchAllCakesError(error.message));\n  }\n}\nexport function* fetchSearchCakeGenerator(action) {\n  yield put(fetchSearchCakesRequest());\n\n  const apiCall = () => {\n    const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/searchcakes?q=${action.searchText}`;\n    return axios.get(url).then(response => response.data).catch(error => {\n      throw error;\n    });\n  };\n\n  try {\n    const data = yield call(apiCall);\n\n    if (data.data) {\n      yield put(fetchSearchCakesSuccess(data.data));\n    }\n  } catch (e) {\n    yield put(fetchSearchCakesError(e.message));\n  }\n}","map":{"version":3,"sources":["/home/neosoft/react-project/react-second-saga/src/reduxstore/cakes/cakeGenerator.js"],"names":["call","put","axios","fetchAllCakesError","fetchAllCakesRequest","fetchAllCakesSuccess","fetchSearchCakesError","fetchSearchCakesRequest","fetchSearchCakesSuccess","fetchAllCakesGenerator","apiCall","url","process","env","REACT_APP_CAKE_WEBSITE_API_URL","get","then","response","data","catch","error","e","message","fetchSearchCakeGenerator","action","searchText"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,0BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,uBALJ,EAMIC,uBANJ,QAOO,eAPP;AASA,OAAO,UAAUC,sBAAV,GAAmC;AACtC,QAAMR,GAAG,CAACG,oBAAoB,EAArB,CAAT;;AACA,QAAMM,OAAO,GAAG,MAAM;AACnB,UAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,WAA1D;AACA,WAAOZ,KAAK,CAACa,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAELC,KAFK,CAGHC,KAAK,IAAI;AACL,YAAMA,KAAN;AACH,KALE,CAAP;AAOF,GATD;;AAWA,MAAG;AACC,UAAMF,IAAI,GAAG,MAAMlB,IAAI,CAACU,OAAD,CAAvB;;AACA,QAAIQ,IAAI,CAACA,IAAT,EAAe;AACX,YAAMjB,GAAG,CAACI,oBAAoB,CAACa,IAAI,CAACA,IAAN,CAArB,CAAT;AACH;AACJ,GALD,CAMA,OAAMG,CAAN,EAAS;AACL,UAAMpB,GAAG,CAACE,kBAAkB,CAACiB,KAAK,CAACE,OAAP,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,wBAAV,CAAmCC,MAAnC,EAA2C;AAC9C,QAAMvB,GAAG,CAACM,uBAAuB,EAAxB,CAAT;;AACA,QAAMG,OAAO,GAAG,MAAM;AAClB,UAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,8BAA+B,kBAAiBU,MAAM,CAACC,UAAW,EAA7F;AACA,WAAOvB,KAAK,CAACa,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IADlB,EAELC,KAFK,CAGHC,KAAK,IAAI;AACL,YAAMA,KAAN;AACH,KALE,CAAP;AAOH,GATD;;AAWA,MAAI;AACA,UAAMF,IAAI,GAAG,MAAMlB,IAAI,CAACU,OAAD,CAAvB;;AACA,QAAIQ,IAAI,CAACA,IAAT,EAAe;AACX,YAAMjB,GAAG,CAACO,uBAAuB,CAACU,IAAI,CAACA,IAAN,CAAxB,CAAT;AACH;AACJ,GALD,CAMA,OAAMG,CAAN,EAAS;AACL,UAAMpB,GAAG,CAACK,qBAAqB,CAACe,CAAC,CAACC,OAAH,CAAtB,CAAT;AACH;AACJ","sourcesContent":["import { call, put } from \"@redux-saga/core/effects\"\nimport axios from \"axios\"\nimport { \n    fetchAllCakesError, \n    fetchAllCakesRequest, \n    fetchAllCakesSuccess, \n    fetchSearchCakesError, \n    fetchSearchCakesRequest, \n    fetchSearchCakesSuccess \n} from \"./cakeActions\"\n\nexport function* fetchAllCakesGenerator() {\n    yield put(fetchAllCakesRequest())\n    const apiCall = () => {\n       const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/allcakes`\n       return axios.get(url).then(\n           response => response.data\n       ).catch(\n           error => {\n               throw error\n           }\n       ) \n    }\n\n    try{\n        const data = yield call(apiCall)\n        if (data.data) {\n            yield put(fetchAllCakesSuccess(data.data))\n        }\n    }\n    catch(e) {\n        yield put(fetchAllCakesError(error.message))\n    }\n}\n\nexport function* fetchSearchCakeGenerator(action) {\n    yield put(fetchSearchCakesRequest())\n    const apiCall = () => {\n        const url = `${process.env.REACT_APP_CAKE_WEBSITE_API_URL}/searchcakes?q=${action.searchText}`\n        return axios.get(url).then(\n            response => response.data\n        ).catch(\n            error => {\n                throw error\n            }\n        )\n    }\n\n    try {\n        const data = yield call(apiCall)\n        if (data.data) {\n            yield put(fetchSearchCakesSuccess(data.data))\n        }\n    }\n    catch(e) {\n        yield put(fetchSearchCakesError(e.message))\n    }\n}"]},"metadata":{},"sourceType":"module"}